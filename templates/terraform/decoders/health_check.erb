// TODO: With the next breaking change we should remove the decoder for port.
// We've added the ability to check set the port in the response to what is in
// state, because we didn't want to show a diff when the default port is
// unintentionally set.  However, a better fix would be to not set the default
// port, but this will be a breaking change.
if v, ok := res["httpHealthCheck"]; ok {
  block := v.(map[string]interface{})

  if block["portSpecification"] == "USE_SERVING_PORT" || block["portSpecification"] == "USE_NAMED_PORT" {
    block["port"] = d.Get("http_health_check.0.port")
  }

  res["httpHealthCheck"] = block
}

if v, ok := res["httpsHealthCheck"]; ok {
  block := v.(map[string]interface{})

  if block["portSpecification"] == "USE_SERVING_PORT" || block["portSpecification"] == "USE_NAMED_PORT" {
    block["port"] = d.Get("https_health_check.0.port")
  }

  res["httpsHealthCheck"] = block
}

if v, ok := res["tcpHealthCheck"]; ok {
  block := v.(map[string]interface{})

  if block["portSpecification"] == "USE_SERVING_PORT" || block["portSpecification"] == "USE_NAMED_PORT" {
    block["port"] = d.Get("tcp_health_check.0.port")
  }

  res["tcpHealthCheck"] = block
}

if v, ok := res["sslHealthCheck"]; ok {
  block := v.(map[string]interface{})

  if block["portSpecification"] == "USE_SERVING_PORT" || block["portSpecification"] == "USE_NAMED_PORT" {
    block["port"] = d.Get("ssl_health_check.0.port")
  }

  res["sslHealthCheck"] = block
}

return res, nil

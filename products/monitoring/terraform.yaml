# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
--- !ruby/object:Provider::Terraform::Config
overrides: !ruby/object:Overrides::ResourceOverrides
  AlertPolicy: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: alertPolicy/{{project}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_alert_policy_basic"
        primary_resource_id: "alert_policy"
        vars:
          alert_policy_display_name: "My Alert Policy"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb
      extra_schema_entry: templates/terraform/extra_schema_entry/alert_policy.erb
  Group: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: stackdriver/groups/{{project}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_group_basic"
        primary_resource_id: "basic"
        vars:
          display_name: "New Test Group"
      - !ruby/object:Provider::Terraform::Examples
        name: "monitoring_group_subgroup"
        primary_resource_id: "subgroup"
        vars:
          display_name: "New Test SubGroup"
          display_name2: "New Test SubGroup"
    properties:
      parentName: !ruby/object:Overrides::Terraform::PropertyOverride
        diff_suppress_func: 'compareSelfLinkRelativePaths'
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb

  NotificationChannel: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    mutex: stackdriver/notifications/{{project}}
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "notification_channel_basic"
        primary_resource_id: "basic"
        vars:
          display_name: "Test Notification Channel"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb
    properties:
      description: |
        A NotificationChannel is a medium through which an alert is delivered
        when a policy violation is detected. Examples of channels include email, SMS,
        and third-party messaging applications. Fields containing sensitive information
        like authentication tokens or contact info are only partially populated on retrieval.

        Notification Channels are designed to be flexible and are made up of a supported `type`
        and labels to configure that channel. Each `type` has specific labels that need to be
        present for that channel to be correctly configured. The labels that are required to be
        present for one channel `type` are often different than those requried for another.
        Due to these loose constraints it's often best to set up a channel through the UI
        and import to Terraform when setting up a brand new channel type to determine which
        labels are required.

        A list of supported channels per project the `list` endpoint can be
        accessed programatically or through the api explorer at  https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.notificationChannelDescriptors/list .
        This provides the channel type and all of the required labels that must be passed.

        For walkthroughs of the channels see https://cloud.google.com/monitoring/support/notification-options
      labels: !ruby/object:Overrides::Terraform::PropertyOverride
        description: |
          Configuration fields that define the channel and its behavior. The
          permissible and required labels are specified in the
          NotificationChannelDescriptor corresponding to the type field.

          **Note**: Some NotificationChannelDescriptor labels are
          sensitive and the API will return an partially-obfuscated value.
          For example, for `"type": "slack"` channels, an `auth_token`
          label with value "SECRET" will be obfuscated as "**CRET". In order
          to avoid a diff, Terraform will use the state value if it appears
          that the obfuscated value matches the state value in
          length/unobfuscated characters. However, Terraform will not detect a
          a diff if the obfuscated portion of the value was changed outside of
          Terraform.
        custom_flatten: "templates/terraform/custom_flatten/monitoring_obfuscated_labels.go.erb"

  UptimeCheckConfig: !ruby/object:Overrides::Terraform::ResourceOverride
    id_format: "{{name}}"
    import_format: ["{{name}}"]
    examples:
      - !ruby/object:Provider::Terraform::Examples
        name: "uptime_check_config_http"
        primary_resource_id: "http"
        vars:
          display_name: "http-uptime-check"
      - !ruby/object:Provider::Terraform::Examples
        name: "uptime_check_tcp"
        primary_resource_id: "tcp_group"
        vars:
          display_name: "tcp-uptime-check"
          group_display_name: "uptime-check-group"
    custom_code: !ruby/object:Provider::Terraform::CustomCode
      custom_import: templates/terraform/custom_import/self_link_as_name.erb
      post_create: templates/terraform/post_create/set_computed_name.erb
    properties:
      id: !ruby/object:Overrides::Terraform::PropertyOverride
        name: uptimeCheckId
        custom_flatten: "templates/terraform/custom_flatten/id_from_name.erb"
      httpCheck.authInfo.password: !ruby/object:Overrides::Terraform::PropertyOverride
        sensitive: true
        custom_flatten: "templates/terraform/custom_flatten/uptime_check_http_password.erb"
      httpCheck.port: !ruby/object:Overrides::Terraform::PropertyOverride
        default_from_api: true
      resourceGroup.groupId: !ruby/object:Overrides::Terraform::PropertyOverride
        custom_expand: "templates/terraform/custom_expand/resource_from_self_link.go.erb"
        custom_flatten: "templates/terraform/custom_flatten/group_id_to_name.erb"

files: !ruby/object:Provider::Config::Files
  # These files have templating (ERB) code that will be run.
  # This is usually to add licensing info, autogeneration notices, etc.
  compile:
<%= lines(indent(compile('provider/terraform/product~compile.yaml'), 4)) -%>

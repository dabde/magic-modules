# Copyright 2018 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- !ruby/object:Api::Product
name: AppEngine
display_name: App Engine
versions:
  - !ruby/object:Api::Product::Version
    name: ga
    base_url: https://appengine.googleapis.com/v1/
scopes:
  - https://www.googleapis.com/auth/cloud-platform
objects:
  - !ruby/object:Api::Resource
    name: 'DomainMapping'
    description: |
      A domain serving an App Engine application.
    base_url: 'apps/{{project}}/domainMappings'
    self_link: 'apps/{{project}}/domainMappings/{{domain_name}}'
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/appengine/docs/standard/python/mapping-custom-domains'
      api: 'https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.domainMappings'
    async: !ruby/object:Api::Async
      operation: !ruby/object:Api::Async::Operation
        path: 'name'
        base_url: '{{op_id}}'
        wait_ms: 1000
      result: !ruby/object:Api::Async::Result
        path: 'response'
        resource_inside_response: true
      status: !ruby/object:Api::Async::Status
        path: 'done'
        complete: True
        allowed:
          - True
          - False
      error: !ruby/object:Api::Async::Error
        path: 'error'
        message: 'message'
    parameters:
      - !ruby/object:Api::Type::Enum
        name: 'overrideStrategy'
        description: |
          Whether the domain creation should override any existing mappings for this domain.
          By default, overrides are rejected.
        url_param_only: true
        values:
          - :UNSPECIFIED_DOMAIN_OVERRIDE_STRATEGY
          - :STRICT
          - :OVERRIDE
        default_value: :STRICT
      - !ruby/object:Api::Type::String
        name: 'id'
        description: |
          Relative name of the domain serving the application. Example: example.com.
        required: true
    properties:
      - !ruby/object:Api::Type::String
        name: 'name'
        description: |
          Full path to the DomainMapping resource in the API. Example: apps/myapp/domainMapping/example.com.
        output: true
      - !ruby/object:Api::Type::NestedObject
        name: 'sslSettings'
        description: |
          SSL configuration for this domain. If unconfigured, this domain will not serve with SSL.
        properties:
          - !ruby/object:Api::Type::String
            name: 'certificateId'
            description: |
              ID of the AuthorizedCertificate resource configuring SSL for the application. Clearing this field will
              remove SSL support.
              By default, a managed certificate is automatically created for every domain mapping. To omit SSL support
              or to configure SSL manually, specify `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request. You must be
              authorized to administer the `AuthorizedCertificate` resource to manually map it to a DomainMapping resource.
              Example: 12345.
          - !ruby/object:Api::Type::Enum
            name: 'sslManagementType'
            description: |
              SSL management type for this domain. If `AUTOMATIC`, a managed certificate is automatically provisioned.
              If `MANUAL`, `certificateId` must be manually specified in order to configure SSL for this domain.
            values:
              - :SSL_MANAGEMENT_TYPE_UNSPECIFIED
              - :AUTOMATIC
              - :MANUAL
          - !ruby/object:Api::Type::Enum
            name: 'pendingManagedCertificateId'
            description: |
              ID of the managed `AuthorizedCertificate` resource currently being provisioned, if applicable. Until the new
              managed certificate has been successfully provisioned, the previous SSL state will be preserved. Once the
              provisioning process completes, the `certificateId` field will reflect the new managed certificate and this
              field will be left empty. To remove SSL support while there is still a pending managed certificate, clear the
              `certificateId` field with an update request.
            values:
              - :SSL_MANAGEMENT_TYPE_UNSPECIFIED
              - :AUTOMATIC
              - :MANUAL
      - !ruby/object:Api::Type::Array
        name: 'resourceRecords'
        description: |
          The resource records required to configure this domain mapping. These records must be added to the domain's DNS
          configuration in order to serve the application via this domain mapping.
        output: true
        item_type: !ruby/object:Api::Type::NestedObject
          properties:
            - !ruby/object:Api::Type::String
              name: 'name'
              description: |
                Relative name of the object affected by this record. Only applicable for CNAME records. Example: 'www'.
            - !ruby/object:Api::Type::String
              name: 'rrdata'
              description: |
                Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).
            - !ruby/object:Api::Type::Enum
              name: 'type'
              description: |
                Resource record type. Example: `AAAA`.
              values:
                - :RECORD_TYPE_UNSPECIFIED
                - :A
                - :AAAA
                - :CNAME
  - !ruby/object:Api::Resource
    name: 'FirewallRule'
    description: |
      A single firewall rule that is evaluated against incoming traffic
      and provides an action to take on matched requests.
    base_url: 'apps/{{project}}/firewall/ingressRules'
    self_link: 'apps/{{project}}/firewall/ingressRules/{{priority}}'
    update_verb: :PATCH
    update_mask: true
    references: !ruby/object:Api::Resource::ReferenceLinks
      guides:
        'Official Documentation':
          'https://cloud.google.com/appengine/docs/standard/python/creating-firewalls#creating_firewall_rules'
      api: 'https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.firewall.ingressRules'
    collection_url_key: 'ingressRules'
    parameters:
      - !ruby/object:Api::Type::Integer
        name: 'priority'
        description: |
          A positive integer that defines the order of rule evaluation.
          Rules with the lowest priority are evaluated first.

          A default rule at priority Int32.MaxValue matches all IPv4 and
          IPv6 traffic when no previous rule matches. Only the action of
          this rule can be modified by the user.
    properties:
      - !ruby/object:Api::Type::String
        name: 'description'
        description: 'An optional string description of this rule.'
        required: false
      - !ruby/object:Api::Type::String
        name: 'sourceRange'
        description: 'IP address or range, defined using CIDR notation, of requests that this rule applies to.'
        required: true
      - !ruby/object:Api::Type::Enum
        name: 'action'
        description: |
          The action to take if this rule matches.
        required: true
        values:
          - :UNSPECIFIED_ACTION
          - :ALLOW
          - :DENY
